esphome:
  name: ${device_name}
  platform: ESP8266
  board: esp12e

packages:
  device_common: !include .device_common.yaml

logger:
  level: DEBUG
  baud_rate: 0

uart:
  id: haier_uart
  tx_pin: GPIO01
  rx_pin: GPIO03
  baud_rate: 9600

status_led:
  pin:
    number: GPIO2
    inverted: yes

climate:
  - platform: haier
    id: ${climate_id}
    protocol: hOn
    name: ${climate_name} 
    uart_id: haier_uart
    wifi_signal: true
    visual:
      min_temperature: 18 째C
      max_temperature: 30 째C
      temperature_step: 1 째C
    supported_swing_modes:
    - 'OFF'
    - VERTICAL

sensor:
  - platform: haier
    haier_id: ${climate_id}
    outdoor_temperature:
      name: ${climate_name} outdoor temperature

switch:
  - platform: haier
    beeper:
      id: ${climate_id}_beeper_switch
      entity_category: config
      name: ${climate_name} beeper
      icon: mdi:volume-high
    display:
      id: ${climate_id}_display_switch
      name: ${client_name} display
      entity_category: config
      icon: mdi:led-on

select:
  - platform: template
    id: ${climate_id}_vertical_direction
    name: ${climate_name} airflow vertical
    entity_category: config
    icon: mdi:arrow-expand-vertical
    update_interval: 5s
    options:
      - Health Up
      - Max Up
      - Up
      - Center
      - Down
      - Max Down
      - Health Down
      - Auto
    lambda: >-
      esphome::haier::hon_protocol::VerticalSwingMode airflow =
        id(${climate_id})->get_vertical_airflow()
        .value_or(esphome::haier::hon_protocol::VerticalSwingMode::CENTER);
      switch (airflow) {
          case esphome::haier::hon_protocol::VerticalSwingMode::HEALTH_UP:
              return std::string("Health Up");
          case esphome::haier::hon_protocol::VerticalSwingMode::MAX_UP:
              return std::string("Max Up");
          case esphome::haier::hon_protocol::VerticalSwingMode::UP:
              return std::string("Up");
          default:
          case esphome::haier::hon_protocol::VerticalSwingMode::CENTER:
              return std::string("Center");
          case esphome::haier::hon_protocol::VerticalSwingMode::DOWN:
              return std::string("Down");
          case esphome::haier::hon_protocol::VerticalSwingMode::MAX_DOWN:
              return std::string("Max Down");
          case esphome::haier::hon_protocol::VerticalSwingMode::HEALTH_DOWN:
              return std::string("Health Down");
          case esphome::haier::hon_protocol::VerticalSwingMode::AUTO:
          case esphome::haier::hon_protocol::VerticalSwingMode::AUTO_SPECIAL:
              return std::string("Auto");
      }
    set_action:
      - climate.haier.set_vertical_airflow:
          id: ${climate_id}
          vertical_airflow: !lambda >-
            if (x == "Health Up")
                return esphome::haier::hon_protocol::VerticalSwingMode::HEALTH_UP;
            else if (x == "Max Up")
                return esphome::haier::hon_protocol::VerticalSwingMode::MAX_UP;
            else if (x == "Up")
                return esphome::haier::hon_protocol::VerticalSwingMode::UP;
            else if (x == "Down")
                return esphome::haier::hon_protocol::VerticalSwingMode::DOWN;
            else if (x == "Max Down")
                return esphome::haier::hon_protocol::VerticalSwingMode::MAX_DOWN;
            else if (x == "Health Down")
                return esphome::haier::hon_protocol::VerticalSwingMode::HEALTH_DOWN;
            else if (x == "Auto")
                return esphome::haier::hon_protocol::VerticalSwingMode::AUTO;
            else
                return esphome::haier::hon_protocol::VerticalSwingMode::CENTER;

text_sensor:
  - platform: template
    name: ${climate_name} cleaning status
    icon: mdi:spray-bottle
    lambda: return id(${climate_id}).get_cleaning_status_text();

button:
  - platform: template
    name: ${climate_name} start self cleaning
    icon: mdi:spray-bottle
    on_press:
      - climate.haier.start_self_cleaning: ${climate_id}
  - platform: template
    name: ${climate_name} start 56째C steri-cleaning
    icon: mdi:spray-bottle
    on_press:
      - lambda: id(${climate_id}).start_steri_cleaning();
