substitutions:
    device_name: "rock5b-power-guard"
    device_name_underscore: "rock5b_power_guard"

globals:
  - id: power_state
    type: bool
    restore_value: true
    initial_value: "true"

packages:
  device_common: !include .device_common.yaml

deep_sleep:
  id: deep_sleep_
  sleep_duration: 60s

esphome:
  name: ${device_name}
  platform: ESP8266
  board: d1_mini
  esp8266_restore_from_flash: true

# status_led:
#   pin:
#     number: D4
#     inverted: true

switch:
  - platform: gpio
    pin: D1
    id: relay
    internal: true

light:
  - platform: status_led
    id: "status_led_"
    internal: true
    pin:
      number: D4
      inverted: true

binary_sensor:
  - platform: gpio
    id: "${device_name_underscore}_external_power"
    pin: 
      number: D7
      inverted: true
    name: "${device_name} external power"
    on_state:
      lambda: |-
        bool old_power_state = id(power_state);
        id(power_state) = x;
        if (x) {
          id(status_led_).turn_on().perform();
          ESP_LOGD("WATCHER", "Added power");
          if (!old_power_state) {
            id(reset_rock5b).execute();
          }
        } else {
          id(status_led_).turn_off().perform();
          ESP_LOGD("WATCHER", "Removed power");
          id(deep_sleep_).begin_sleep(true);
        }

script:
  - id: reset_rock5b
    then:
      - switch.turn_on: relay
      - delay: 1s
      - switch.turn_off: relay
