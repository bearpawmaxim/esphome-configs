substitutions:
  device_name: battery-status-display
  device_name_underscore: battery_status_display

globals:
  - id: voltage
    type: float
    initial_value: '0.0'
  - id: current
    type: float
    initial_value: '0.0'
  - id: soc
    type: float
    initial_value: '0.0'
  - id: power
    type: float
    initial_value: '0.0'
  - id: min_cell_voltage
    type: float
    initial_value: '0.0'
  - id: max_cell_voltage
    type: float
    initial_value: '0.0'
  - id: cell_temp
    type: float
    initial_value: '0.0'
  - id: mos_temp
    type: float
    initial_value: '0.0'

esphome:
  name: ${device_name}
  platformio_options:
    board_build.flash_mode: dio

esp32:
  framework: 
    type: esp-idf
    version: recommended
  board: esp32-c3-devkitm-1

external_components:
  - source: github://syssi/esphome-jk-bms@main
    components: [jk_bms_display]
    refresh: 1s

packages:
  device_common: !include .ext_device_common.yaml
  jkbms_disp_port: !include 
    file: battery-status-display/jkbms-display-port.yaml
    vars:
      rx_pin: GPIO20
  lvgl-ui: !include battery-status-display/lvgl-ui.yaml

wifi:
  on_connect:
    - script.execute:
        id: lvgl_update_status_icon
        name: wifi_icon
        is_on: true
  on_disconnect:
    - script.execute:
        id: lvgl_update_status_icon
        name: wifi_icon
        is_on: false

http_request:

ota:
  - platform: http_request
    id: http_ota
    on_error:
      - lvgl.label.update:
          id: update_label
          text: "Failed to update. Please try again."
      - delay: 10s
      - lvgl.label.update:
          id: update_label
          text: "Long press here to start the update."
  - platform: esphome
    id: esphome_ota
    password: !secret ota_password

mqtt:
  broker: !secret ext_mqtt_broker_addr
  port: !secret ext_mqtt_broker_port
  username: !secret ext_mqtt_broker_username
  password: !secret ext_mqtt_broker_password
  certificate_authority: !secret ext_mqtt_broker_cert
  skip_cert_cn_check: false
  idf_send_async: true
  birth_message:
    topic: ${device_name}/status
    payload: "online"
  on_connect:
    - script.execute:
        id: lvgl_update_status_icon
        name: mqtt_icon
        is_on: true
  on_disconnect:
    - script.execute:
        id: lvgl_update_status_icon
        name: mqtt_icon
        is_on: false

logger:
  baud_rate: 0
  level: WARN

spi:
  mosi_pin: GPIO7
  clk_pin: GPIO6

i2c:
  sda: GPIO4
  scl: GPIO5

output:
  - platform: ledc
    pin: GPIO3
    id: gpio_3_backlight_pwm

light:
  - platform: monochromatic
    output: gpio_3_backlight_pwm
    name: "Display Backlight"
    id: backlight
    internal: true
    restore_mode: ALWAYS_ON

display:
  - platform: ili9xxx
    id: watchface
    model: GC9A01A
    cs_pin: GPIO10
    dc_pin: GPIO2
    data_rate: 80MHz
    pixel_mode: 16bit
    dimensions:
      width: 240
      height: 240
    update_interval: never
    invert_colors: true
    auto_clear_enabled: false

touchscreen:
  id: touch
  platform: cst816
  interrupt_pin: GPIO0
  reset_pin: GPIO1
  on_release:
    - script.execute: lvgl_resume

interval:
  - interval: 1s
    id: update_labels_interval
    then:
      - script.execute: lvgl_update_values
      - script.execute: lvgl_show_alarms

script:
  - id: lvgl_update_values
    mode: single
    then:
      - lvgl.label.update:
          id: soc_label
          text:
            format: "%.0f%%"
            args: ['id(soc)']
      - lvgl.label.update:
          id: power_label
          text:
            format: "%.0fW"
            args: ['id(power)']
      - lvgl.label.update:
          id: cap_label
          text:
            format: "%.1fAh"
            args: ['id(soc) * 1.05']
      - lvgl.label.update:
          id: current_label
          text:
            format: "%.1fA"
            args: ['id(current)']
      - lvgl.label.update:
          id: min_cell_v_label
          text:
            format: "%.3fV"
            args: ['id(min_cell_voltage)']
      - lvgl.label.update:
          id: max_cell_v_label
          text:
            format: "%.3fV"
            args: ['id(max_cell_voltage)']
      - lvgl.label.update:
          id: cell_temp_label
          text:
            format: "%.1fC"
            args: ['id(cell_temp)']
      - lvgl.label.update:
          id: mos_temp_label
          text:
            format: "%.1fC"
            args: ['id(mos_temp)']
  - id: lvgl_show_alarms
    mode: single
    then:
      if:
        condition:
          lambda: "return id(jkbms_has_alarms)->state;"
        then:
          - lvgl.label.update:
              id: alarms_label
              text: !lambda return id(jkbms_alarms)->state;
              text_color: warning_color
          - script.execute:
              id: lvgl_update_status_icon
              name: alarm_icon
              is_on: false
        else:
          - lvgl.label.update:
              id: alarms_label
              text: "No alarms!"
              text_color: success_color
          - script.execute:
              id: lvgl_update_status_icon
              name: alarm_icon
              is_on: true
  - id: update_firmware
    mode: single
    then:
      - lvgl.label.update:
          id: update_label
          text: "Updating"
      - delay: 500ms
      - ota.http_request.flash:
          md5_url: !secret battery_status_display_ota_md5_url
          url: !secret battery_status_display_ota_url

button:
  - id: turn_on_screen
    name: ${device_name} turn on screen
    platform: template
    on_press:
      - script.execute:
          id: lvgl_resume
  - id: start_http_ota
    name: ${device_name} start http ota
    platform: template
    on_press:
      - script.execute:
          id: update_firmware
