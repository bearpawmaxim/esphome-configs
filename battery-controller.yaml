substitutions:
  device_name: battery-controller

packages:
  device_common: !include .device_common.yaml

esphome:
  name: battery-controller
  friendly_name: battery-controller
  platformio_options:
    board_build.flash_mode: dio

esp32:
  board: esp32-s3-devkitc-1
  variant: ESP32S3
  framework:
    type: esp-idf

psram:
  mode: quad
  speed: 80MHZ

external_components:
  - source: github://pr#6537
    components: [ io_bus, i80, spi, ili9xxx ]
  - source: github://clydebarrow/esphome@lvgl
    components: [ lvgl ]

logger:

debug:

sensor:
  - platform: debug
    free:
      name: "Heap Free"
    block:
      name: "Heap Max Block"
    loop_time:
      name: "Loop Time"
    psram:
      name: "Free PSRAM"

i2c:
  sda: GPIO6
  scl: GPIO5
  id: touch_i2c

touchscreen:
  - platform: ft63x6
    id: touch
    interrupt_pin: GPIO7
    transform:
      mirror_x: true
    on_update:
      - lambda: |-
          for (auto touch: touches)  {
            if (touch.state <= 2) {
              ESP_LOGI("Touch points:", "id=%d x=%d, y=%d", touch.id, touch.x, touch.y);
            }
          }
    on_release:
      - if:
          condition: lvgl.is_paused
          then:
            - lvgl.resume:
            - lvgl.widget.redraw:
            - light.turn_on: backlight

output:
  - platform: ledc
    id: backlight_pwm
    pin: GPIO45

light:
  - platform: monochromatic
    id: backlight
    output: backlight_pwm
    restore_mode: ALWAYS_ON

font:
  - file: 'gfonts://Roboto'
    id: font_date_time
    bpp: 4
    size: 16
  - file: battery-controller/SquareDotMatrix.ttf
    id: font_soc
    bpp: 4
    size: 36
    glyphs: ['0','1','2','3','4','5','6','7','8','9','%',' ']

color:
  - id: color_red
    red: 100%
  - id: color_green
    green: 100%

i80:
  - id: i80bus
    dc_pin: GPIO0
    wr_pin: GPIO47
    data_pins:
      - GPIO9
      - GPIO46
      - GPIO3
      - GPIO8
      - GPIO18
      - GPIO17
      - GPIO16
      - GPIO15

display:
  - platform: ili9xxx
    model: ST7789V
    bus_type: i80
    reset_pin: GPIO4
    data_rate: 20MHZ
    pixel_mode: 18bit
    color_order: bgr
    invert_colors: true
    dimensions:
      width: 480
      height: 320
    transform:
      swap_xy: true
    auto_clear_enabled: false

number:
  - platform: template
    name: Screen timeout
    optimistic: true
    id: display_timeout
    unit_of_measurement: "s"
    initial_value: 45
    restore_value: true
    min_value: 10
    max_value: 180
    step: 5
    mode: box
  - platform: template
    name: SOC test
    optimistic: true
    initial_value: 42
    restore_value: true
    min_value: 0
    max_value: 100
    step: 1
    mode: slider
    on_value:
      then:
        - lvgl.arc.update:
            id: soc_arc
            value: !lambda return x;
            indicator:
              arc_color: !lambda |-
                auto color = id(color_red).gradient(id(color_green), x * 2.55);
                return lv_color_make (color.red, color.green, color.blue);
        - lvgl.label.update:
            id: soc_label
            text:
              format: "%d%%"
              args: (int)x

interval:
  - interval: 1sec
    startup_delay: 10sec
    then:
      - if:
          condition:
            not: lvgl.is_paused
          then:
            lvgl.label.update:
              id: header_time
              text: !lambda |-
                static char time_buf[17];
                auto time = id(sntp_time).now();
                snprintf(time_buf, sizeof(time_buf), "%2d:%2d:%2d", time.hour, time.minute, time.second);
                return time_buf;
  - interval: 1min
    startup_delay: 10sec
    then:
      - if:
          condition:
            not: lvgl.is_paused
          then:
            lvgl.label.update:
              id: header_date
              text: !lambda |-
                static const char* const mon_names[] = {"JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"};
                static char date_buf[8];
                auto now = id(sntp_time).now();
                snprintf(date_buf, sizeof(date_buf), "%s %2d", mon_names[now.month-1], now.day_of_month);
                return date_buf;

lvgl:
  log_level: WARN
  color_depth: 16
  bg_color: 0x0F0F0F
  text_font: unscii_8
  align: center
  touchscreens:
    - touchscreen_id: touch
  pages:
    # - <<: !include battery-controller/main-page.lvgl.yaml
    # - <<: !include battery-controller/clock-page.lvgl.yaml
    - id: main_page
      bg_color: 0x464B55
      bg_grad_color: 0x2D323C
      scrollable: false
      widgets:
        - obj:
            id: header
            bg_color: 0x14191E
            height: 20
            width: 100%
            radius: 0
            border_width: 0
            scrollable: false
            align: TOP_MID
            widgets:
              - label:
                  id: header_date
                  align: LEFT_MID
                  width: SIZE_CONTENT
                  height: SIZE_CONTENT
                  text: " "
                  text_color: 0xFFFFFF
                  text_font: font_date_time
              - label:
                  id: header_time
                  align: RIGHT_MID
                  width: SIZE_CONTENT
                  height: SIZE_CONTENT
                  text: "--:--:--"
                  text_color: 0xFFFFFF
                  text_font: font_date_time
              # TODO: WiFi, BMS and Inverter status icons
        - label:
            id: charge_discharge
            width: SIZE_CONTENT
            height: SIZE_CONTENT
            x: 0
            y: 40
            align: TOP_MID
            text: 'Charging'
            text_color: 0xD2CDC8
            text_align: CENTER
            # TODO: Font
        - obj:
            width: 240
            height: 240
            align: CENTER
            scrollable: false
            bg_color: 0xFFFFFF
            bg_opa: 0
            border_width: 0
            widgets:
              - arc:
                  id: soc_arc
                  width: 210
                  height: 210
                  align: CENTER
                  min_value: 0
                  max_value: 100
                  value: 42
                  radius: 210
                  bg_color: 0x1E232D
                  bg_opa: 1
                  pad_left: 5
                  pad_right: 5
                  pad_top: 5
                  pad_bottom: 5
                  arc_color: 0x0F1215
                  indicator:
                    arc_color: 0x00FF00
                    width: 12
                  knob:
                    bg_opa: 0
              - obj:
                  width: 168
                  height: 168
                  align: CENTER
                  clickable: false
                  scrollable: false
                  radius: 168
                  bg_color: 0x646464
                  bg_grad_color: 0x3C414B
                  bg_grad_dir: VER
                  bg_opa: 1
                  border_color: 0x2D323C
                  border_width: 1
                  #shadow_color: 0x050A0F
                  #shadow_width: 40
                  #shadow_spread: 0
                  #shadow_ofs_x: 0
                  #shadow_ofs_y: 15
                  widgets:
                    - obj:
                        width: 120
                        height: 120
                        align: CENTER
                        clickable: false
                        scrollable: false
                        radius: 120
                        bg_color: 0x0C191E
                        bg_grad_color: 0x191C26
                        bg_grad_dir: VER
                        bg_opa: 1
                        border_color: 0x5A646E
                        widgets:
                          - label:
                              id: soc_label
                              width: SIZE_CONTENT
                              height: SIZE_CONTENT
                              x: 0
                              y: 0
                              align: CENTER
                              text_color: 0xFFFFFF
                              text: '100%'
                              text_font: font_soc                  

  on_idle:
    timeout: !lambda "return (id(display_timeout).state * 1000);"
    then:
      - light.turn_off: backlight
      - lvgl.pause:
