globals:
  - id: intensity_red
    type: float
    restore_value: no
    initial_value: '1'
  - id: intensity_green
    type: float
    restore_value: no
    initial_value: '1'
  - id: intensity_blue
    type: float
    restore_value: no
    initial_value: '1'
  - id: target_brightness
    type: float
    restore_value: no
    initial_value: '.8'
  - id: brightness_step
    type: float
    restore_value: no
    initial_value: '.05'

substitutions:
  device_name: lobby-led-light

packages:
  device_common: !include .device_common.yaml

esphome:
  name: ${device_name}
  platform: ESP32
  board: esp32doit-devkit-v1
  includes:
  - includes/lobby_light_effect.h
  on_boot:
    priority: 300.0
    then:
      - light.turn_on:
          id: lobbyledlight
          brightness: 80%
          red: 1
          green: 1
          blue: 1
          # brightness: %
          # red: !lambda |-
          #   return id(intensity_red);
          # green: !lambda |-
          #   return id(intensity_green);
          # blue: !lambda |-
          #   return id(intensity_blue);
          # effect: "Fade in"

light:
  - platform: fastled_clockless
    id: lobbyledlight
    chipset: WS2812B
    pin: GPIO13
    num_leds: 300
    rgb_order: GRB
    name: "Lobby Led Light"
    restore_mode: ALWAYS_OFF
    # effects:
    #   - lambda:
    #       name: "Fade in"
    #       update_interval: 25ms
    #       lambda: |-
    #         float current_brightness = lobbyledlight->current_values.get_brightness();
    #         auto call = lobbyledlight->make_call();
    #         if (current_brightness <= target_brightness->value()) {
    #           current_brightness += brightness_step->value();
    #           call.set_brightness(current_brightness);
    #           call.set_transition_length(0);
    #           call.set_publish(false);
    #           call.set_save(false);
    #           call.perform();
    #         }

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Kiev
    on_time_sync:
      - then:
        - lambda: |-
            auto eff = new LobbyLightEffect(lobbyledlight, sun_sun);
            eff->set_effect_color();
sun:
  latitude: 50.391968°
  longitude: 30.557317°
  on_sunrise:
    - then:
      - lambda: |-
          auto eff = new LobbyLightEffect(lobbyledlight, sun_sun);
          eff->set_effect_color();
  on_sunset:
    - then:
      - lambda: |-
          auto eff = new LobbyLightEffect(lobbyledlight, sun_sun);
          eff->set_effect_color();
