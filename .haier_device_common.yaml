esphome:
  name: ${device_name}
  platform: ESP8266
  board: esp12e

external_components:
  - source: github://paveldn/haier-esphome@master

packages:
  device_common: !include .device_common.yaml

logger:
  level: DEBUG
  baud_rate: 0

uart:
  id: haier_uart
  tx_pin: GPIO01
  rx_pin: GPIO03
  baud_rate: 9600

status_led:
  pin:
    number: GPIO2
    inverted: yes

climate:
  - platform: haier
    id: ${climate_id}
    protocol: hOn
    name: ${climate_name} 
    uart_id: haier_uart
    wifi_signal: true
    beeper: true
    outdoor_temperature:
      name: ${climate_name} outdoor temperature
    visual:
      min_temperature: 18 째C
      max_temperature: 30 째C
      temperature_step: 1 째C
    supported_swing_modes:
    - 'OFF'
    - VERTICAL

switch:
  - platform: template
    id: ${climate_id}_display_switch
    name: ${climate_name} display
    icon: mdi:led-on
    entity_category: config
    lambda: |-
      return id(${climate_id}).get_display_state();
    turn_on_action:
      climate.haier.display_on: ${climate_id}
    turn_off_action:
      climate.haier.display_off: ${climate_id}
    restore_mode: RESTORE_DEFAULT_ON
  - platform: template
    id: ${climate_id}_beeper_switch
    entity_category: config
    name: ${climate_name} beeper
    icon: mdi:volume-high
    lambda: |-
      return id(${climate_id}).get_beeper_state();
    turn_on_action:
      climate.haier.beeper_on: ${climate_id}
    turn_off_action:
      climate.haier.beeper_off: ${climate_id}
    restore_mode: RESTORE_DEFAULT_ON

select:
  - platform: template
    id: ${climate_id}_vertical_direction
    name: ${climate_name} airflow vertical
    entity_category: config
    icon: mdi:arrow-expand-vertical
    optimistic: true
    restore_value: true
    initial_option: Center 
    options:
      - Up
      - Center
      - Down
    on_value:
      then:
        - climate.haier.set_vertical_airflow:
            id: ${climate_id}
            vertical_airflow: !lambda |-
              return esphome::haier::AirflowVerticalDirection(i);

text_sensor:
  - platform: template
    name: ${climate_name} cleaning status
    icon: mdi:spray-bottle
    lambda: return id(${climate_id}).get_cleaning_status_text();

button:
  - platform: template
    name: ${climate_name} start self cleaning
    icon: mdi:spray-bottle
    on_press:
      - climate.haier.start_self_cleaning: ${climate_id}
  - platform: template
    name: ${climate_name} start 56째C steri-cleaning
    icon: mdi:spray-bottle
    on_press:
      - lambda: id(${climate_id}).start_steri_cleaning();
    