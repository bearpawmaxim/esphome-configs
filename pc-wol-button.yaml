substitutions:
  device_name: pc-wol-button
  device_name_underscore: pc_wol_button
  bearpaw_pc_mac_addr: !secret bearpaw_pc_mac_addr

esphome:
  name: ${device_name}
  platform: ESP32
  board: esp32-c3-devkitm-1
  includes:
    - pc-wol-button/WakeOnLan.cpp
    - pc-wol-button/WakeOnLan.h
    - pc-wol-button/pc_wol_button.h

packages:
  device_common: !include .device_common.yaml

external_components:
  - source: github://bearpawmaxim/esphome@pr3625fix
    components: [gc9a01]
  # - source: pc-wol-button/
  #   components: [logger, gc9a01]
  - source: github://pr#5941
    components: [cst816]
# - source: github://GadgetFactory/CST816S_touchscreen@1.0.0

logger:
  baud_rate: 460800

spi:
  mosi_pin: GPIO7
  clk_pin: GPIO6

i2c:
  sda: GPIO4
  scl: GPIO5

output:
  - platform: ledc
    pin: GPIO3
    id: gpio_3_backlight_pwm

light:
  - platform: monochromatic
    output: gpio_3_backlight_pwm
    name: "Display Backlight"
    id: backlight
    restore_mode: ALWAYS_ON

# time:
#   - id: !extend sntp_time
#     on_time:
#       # Lower the backlight at night.
#       - hours: 23
#         then:
#           - light.turn_on: 
#               id: backlight
#               brightness: 20%
#       - hours: 08
#         then:
#           - light.turn_on:
#               id: backlight
#               brightness: 100%

wifi:
  on_connect:
    - script.execute: prepare_wol


button:
  - platform: template
    name: read id
    on_press:
      - lambda: |-
          uint8_t chip_id_;
          bool s = id(cst816d)->read_byte(0xA7, &chip_id_);
          ESP_LOGI("CST", "CST Chip id is %d (success %d)", chip_id_, s);

script:
  - id: prepare_wol
    mode: single
    then:
      lambda: wol_setup();
  - id: send_wol_packet
    mode: single
    then:
      lambda: wol_send("id(bearpaw_pc_mac_addr");

color:
  - id: my_blue
    red: 3%
    green: 5%
    blue: 100%
  - id: flip_clock_color
    hex: 5C2603

font:
  - file: 'gfonts://Roboto'
    id: font_16
    size: 16
  - file: 'pc-wol-button/flip_clock_font.ttf'
    id: flip_clock_font
    size: 70
    glyphs: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':']

display:
#  - platform: ili9xxx
#    model: gc9a01
# Above is for when or if this is merged into the ili9xxx platform
  - platform: gc9a01
    id: watchface
    # reset_pin: GPIO1
    cs_pin: GPIO10
    dc_pin: GPIO2
    width: 240
    height: 240
    eight_bit_color: false
    rotation: 270
    lambda: |-
      it.strftime(120, 70, id(font_16), id(flip_clock_color), TextAlign::CENTER, "%A %b %d", id(sntp_time).now());
      it.strftime(120, 120, id(flip_clock_font), id(flip_clock_color), TextAlign::CENTER, "%H:%M", id(sntp_time).now());
      bool is_sending_wol = id(send_wol_packet).is_running();
      if (!is_sending_wol)
        it.print(120, 180, id(font_16), id(my_blue), TextAlign::CENTER, "Press to wake the PC");
      else
        it.print(120, 180, id(font_16), id(my_blue), TextAlign::CENTER, "Sending WOL packet");
      
      it.circle(120, 120, 115, id(flip_clock_color));

# text_sensor:
#  - platform: CST816S_touchscreen
#    id: touch
#    on_value:
#      then:
#        - if:
#            condition:
#              and:
#                - text_sensor.state:
#                    id: touch
#                    state: 'SINGLE CLICK'
#            then:
#              - script.execute: send_wol_packet
#              - component.update: watchface
#              - script.wait: send_wol_packet
#              - component.update: watchface
#        - if:
#            condition:
#              and:
#                - text_sensor.state:
#                    id: touch
#                    state: 'LONG PRESS'
#            then:
#              - script.execute: send_wol_packet
#              - component.update: watchface
#              - script.wait: send_wol_packet
#              - component.update: watchface

touchscreen:
  id: cst816d
  platform: cst816
  interrupt_pin: GPIO0
  reset_pin: GPIO1

binary_sensor:
  - platform: touchscreen
    name: Power on button
    id: power_on_button
    x_min: 20
    x_max: 20
    y_min: 220
    y_max: 220
#     page_id: power_on_btn_page
    on_click: 
      - script.execute: send_wol_packet
      - component.update: watchface
      - script.wait: send_wol_packet
      - component.update: watchface
